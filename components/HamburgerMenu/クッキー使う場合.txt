これを有効にする場合はlayout.tsxのクッキーコンセントをアクティブにしてください。


import { getCookieConsent, getCookieValue, setSiteCookie } from '@/utils/cookieManager';

const SIDEBAR_COOKIE_MAX_AGE = 86400; // 例: 1日分の秒数


    const [isEventDropdownOpen, setIsEventDropdownOpen] = useState(false);
    useEffect(() => {
        const consent = getCookieConsent();
        if (!consent) return;

        const eventVal = getCookieValue('collapsible_event');
        if (eventVal !== null) {
            setIsEventDropdownOpen(eventVal === 'true');
        }
    }, []);

    const handleEventDropdownChange = (value: boolean) => {
        setIsEventDropdownOpen(value);
        if (getCookieConsent()) {
            setSiteCookie('collapsible_event', value.toString(), SIDEBAR_COOKIE_MAX_AGE);
        }
    };

    const toggleEventDropdown = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {
        e.preventDefault();
        handleEventDropdownChange(!isEventDropdownOpen);
    };


<li className="fusion-item-expand">
    <div className="fusion-item">
        <a href="/event" onClick={toggleEventDropdown}>EVENT</a>
    </div>
    <ul className={"fusion-dropdown" + (isEventDropdownOpen ? " fusion-open" : "")}>
        <li className="fusion-dropdown-item">
            <a href="/event">・イベント一覧</a>
        </li>
        <li className="fusion-dropdown-item">
            <a href="/event?id=全日制">・全日制</a>
        </li>
        <li className="fusion-dropdown-item">
            <a href="/event?id=食品販売">・食品販売</a>
        </li>
        <li className="fusion-dropdown-item">
            <a href="/event?id=ステージ">・ステージ</a>
        </li>
        <li className="fusion-dropdown-item">
            <a href="/event?id=定時制">・定時制</a>
        </li>
    </ul>
</li>


<li className="fusion-item">
    <a href="/setting">SETTING</a>
</li>